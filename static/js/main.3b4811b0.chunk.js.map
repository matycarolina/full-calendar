{"version":3,"sources":["reportWebVitals.js","@fake-db/mock.js","@fake-db/db/patients.js","@fake-db/api/patients.js","@fake-db/index.js","FilterButtons.js","Calendar.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mock","MockAdapter","axios","data","patients","id","extendedProps","type","patient","doctor","surgery","status","start","end","url","resourceId","title","onGet","reply","config","console","log","filtered","filter","includes","onAny","passThrough","FilterButtons","setFiltered","handleChange","e","target","checked","name","index","indexOf","beforeIndex","slice","afterIndex","length","check","onChange","Calendar","schedulerLicenseKey","plugins","dayGridPlugin","bootstrapPlugin","timeGridPlugin","listPlugin","resourceTimeGridPlugin","resourceTimelinePlugin","initialView","resources","headerToolbar","eventContent","eventInfo","event","borderColor","className","style","width","getHours","getMinutes","src","alt","events","App","useState","setData","useEffect","get","response","xs","md","lg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b4811b0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import MockAdapter from 'axios-mock-adapter'\nimport axios from 'axios'\n\nconst mock = new MockAdapter(axios)\n\nexport default mock\n","export const data = {\n  patients: [\n    {\n      id: \"1\",\n      extendedProps: {\n        type: \"appointments\",\n        patient: \"Raul Salinas\",\n        doctor: \"Dr. Vicente Garcia\",\n        surgery: \"Apendicectomia\",\n        status: \"Citado\",\n      },\n      start: \"2021-12-28T11:00:00\",\n      end: \"2021-12-28T12:30:00\",\n      url: \"https://res.cloudinary.com/dekqenh3y/image/upload/v1638303770/llamada-telefonica_v5ba31.png\",\n      resourceId: \"1\",\n    },\n    {\n      id: \"2\",\n      title: \"Meditation\",\n      extendedProps: {\n        type: \"appointments\",\n        patient: \"Carolina Murillo\",\n        doctor: \"Dr. Xavier Serrano\",\n        surgery: \"Colecistectomia\",\n        status: \"En Cirugia\",\n      },\n      start: \"2021-12-28T10:00:00\",\n      end: \"2021-12-28T11:00:00\",\n      url: \"https://res.cloudinary.com/dekqenh3y/image/upload/v1638303770/llamada-telefonica_v5ba31.png\",\n      resourceId: \"2\"\n    },\n    {\n      id:\"3\",\n      title: \"Doctor's Appointment\",\n      extendedProps: {\n        type: \"appointments\",\n        patient: \"Santiago Rojas\",\n        doctor: \"Dr. Alberto Perez\",\n        surgery: \"Sutura fractura expuesta\",\n        status: \"Cirugia Finalizada\",\n      },\n      start: \"2021-12-28T06:00:00\",\n      end: \"2021-12-28T08:00:00\",\n      url: \"https://res.cloudinary.com/dekqenh3y/image/upload/v1638303770/llamada-telefonica_v5ba31.png\",\n      resourceId: \"3\",\n    },\n    {\n      id:\"4\",\n      title: \"Doctor's Appointment\",\n      extendedProps: {\n        type: \"appointments\",\n        patient: \"Manuel Davila\",\n        doctor: \"Dr. Alberto Perez\",\n        surgery: \"Extraccion Terceros Molares\",\n        status: \"No Presentado\",\n      },\n      start: \"2021-12-28T08:00:00\",\n      end: \"2021-12-28T10:00:00\",\n      url: \"https://res.cloudinary.com/dekqenh3y/image/upload/v1638303770/llamada-telefonica_v5ba31.png\",\n      resourceId: \"1\",\n    },\n  ]\n}","import mock from '../mock';\nimport { data } from '../db/patients';\n\nmock.onGet('/api/patients/list/all-data').reply((config) => {\n    console.log(config.filtered);\n    const status = config.filtered;\n    const dataFiltered = data.patients.filter(patient=> status?.includes(patient.extendedProps.status))\n    return[200, dataFiltered]\n});\n\n\n","import mock from './mock'\nimport './api/patients'\n\nmock.onAny().passThrough()\n","import React from \"react\";\nimport { Input, Label, FormGroup } from \"reactstrap\";\n\nexport const FilterButtons = ({filtered, setFiltered}) => {\n  \n\n  const handleChange = (e) => {\n    const { checked, name } = e.target;\n    if (name===\"Todos\" && checked){\n        setFiltered([\"Citado\", \"En Cirugia\", \"Cirugia Finalizada\", \"No Presentado\", \"Todos\"])\n        return\n    }\n    if (name===\"Todos\" && !checked){\n        setFiltered([])\n        return\n    }\n    if (checked) {\n      setFiltered([...filtered, name]);\n    }\n    if (!checked) {\n      const index = filtered.indexOf(name);\n      const beforeIndex = filtered.slice(0, index);//slice porque crea un nuevo array, no modificamos el estado\n      const afterIndex = filtered.slice(index + 1, filtered.length);\n      setFiltered([...beforeIndex, ...afterIndex]);\n    }\n\n  };\n  return (\n    <div>\n      <h3>Filtrar</h3>\n      <FormGroup check>\n        <Input\n          type=\"checkbox\"\n          onChange={handleChange}\n          name=\"Todos\"\n          checked={filtered.includes(\"Todos\")}\n        />{\" \"}\n        <Label check>Todos</Label>\n        <br />\n        <Input\n          type=\"checkbox\"\n          onChange={handleChange}\n          name=\"Citado\"\n          checked={filtered.includes(\"Citado\")}//boolean\n        />{\" \"}\n        <Label check>Citado</Label>\n        <br />\n        <Input\n          type=\"checkbox\"\n          onChange={handleChange}\n          name=\"En Cirugia\"\n          checked={filtered.includes(\"En Cirugia\")}\n        />{\" \"}\n        <Label check>En Cirugia</Label>\n        <br />\n        <Input\n          type=\"checkbox\"\n          onChange={handleChange}\n          name=\"Cirugia Finalizada\"\n          checked={filtered.includes(\"Cirugia Finalizada\")}\n        />{\" \"}\n        <Label check>Cirugia Finalizada</Label>\n        <br />\n        <Input\n          type=\"checkbox\"\n          onChange={handleChange}\n          name=\"No Presentado\"\n          checked={filtered.includes(\"No Presentado\")}\n        />{\" \"}\n        <Label check>No Presentado</Label>\n      </FormGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./scss/custom.scss\";\n\nfunction Calendar({data}) {\n \n  function renderEventContent(eventInfo) {\n    const { event } = eventInfo;\n    const { type, doctor, surgery, patient, status, resourceId } =\n      event.extendedProps;\n    const { borderColor } = event;\n    const { start, end } = event;\n    console.log(event);\n    console.log(resourceId);\n    return (\n      <div\n        className={`bg-${type} text-${type}-text`}\n        style={{ borderColor: borderColor, width: \"100%\" }}\n      >\n        <p>{`${start?.getHours()}:${start?.getMinutes()} - ${end?.getHours()}:${end?.getMinutes()}`}</p>\n        <b>{patient}</b>\n        <p>{doctor}</p>\n        <p>{surgery}</p>\n\n        {status === \"Pendiente\" && (\n          <div className={`text-${status}-text`}>\n            <img\n              src={eventInfo.event.url}\n              style={{ width: \"30px\" }}\n              alt={eventInfo.event.title}\n            />\n            <span>{status}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n  return (\n    <FullCalendar\n      schedulerLicenseKey=\"CC-Attribution-NonCommercial-NoDerivatives\"\n      plugins={[\n        dayGridPlugin,\n        bootstrapPlugin,\n        timeGridPlugin,\n        listPlugin,\n        resourceTimeGridPlugin,\n        resourceTimelinePlugin,\n      ]}\n      initialView=\"resourceTimeGridDay\"\n      resources={[\n        { id: \"1\", title: \"Quirofano 1\" },\n        { id: \"2\", title: \"Quirofano 2\" },\n        { id: \"3\", title: \"Quirofano 3\" },\n      ]}\n      headerToolbar={{\n        start: \"prev,next title\",\n\n        end: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n      }}\n      eventContent={renderEventContent}\n      events={data}\n    />\n  );\n}\nexport default Calendar;\n","import React from \"react\";\nimport { FilterButtons } from \"./FilterButtons\";\nimport { Row, Col } from \"reactstrap\";\nimport Calendar from \"./Calendar\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const App = () => {\n  const [data, setData] = useState([]);\n  const [filtered, setFiltered] = useState([\"Citado\", \"En Cirugia\"]);\n  useEffect(() => {\n    axios\n      .get(\"/api/patients/list/all-data\", { filtered })//agregamos un QueryParams\n      .then(function (response) {\n        setData(response.data);\n      });\n  }, [filtered]);\n  return (\n    <Row xs=\"12\">\n      <Col xs=\"12\" md=\"3\" lg=\"2\">\n        <FilterButtons filtered={filtered} setFiltered={setFiltered}/>\n      </Col>\n      <Col xs=\"12\" md=\"9\" lg=\"10\">\n        <Calendar data={data}/>\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./@fake-db\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}