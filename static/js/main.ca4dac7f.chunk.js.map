{"version":3,"sources":["Calendar.js","reportWebVitals.js","index.js"],"names":["Calendar","plugins","dayGridPlugin","bootstrapPlugin","timeGridPlugin","listPlugin","initialView","headerToolbar","start","center","end","eventContent","eventInfo","event","type","extendedProps","borderColor","console","log","className","style","title","events","date","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAWqBA,E,4JACnB,WAaE,OACE,cAAC,IAAD,CACEC,QAAS,CAACC,IAAeC,IAAiBC,IAAgBC,KAE1DC,YAAY,eACZC,cAAe,CACbC,MAAO,kBACPC,OAAO,GACPC,IAAK,kDAEPC,aAtBJ,SAA4BC,GAAY,IAC9BC,EAAUD,EAAVC,MACAC,EAASD,EAAME,cAAfD,KACDE,EAAeH,EAAfG,YAGP,OAFAC,QAAQC,IAAIL,GACZI,QAAQC,IAAIJ,GAEV,qBAAKK,UAAS,aAAQL,EAAR,iBAAqBA,EAArB,SAAkCM,MAAO,CAACJ,YAAYA,GAApE,SACE,4BAAKJ,EAAUC,MAAMQ,WAevBC,OAAQ,CACN,CACED,MAAO,SACPE,KAAM,aACNR,cAAe,CACbD,KAAM,SAGV,CACEO,MAAO,aACPE,KAAM,aACNR,cAAe,CACbD,KAAM,WAGV,CACEO,MAAO,uBACPE,KAAM,aACNR,cAAe,CACbD,KAAM,UAERE,YAAY,e,GA9CcQ,IAAMC,WCC7BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,M","file":"static/js/main.ca4dac7f.chunk.js","sourcesContent":["import React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./scss/custom.scss\";\n\nexport default class Calendar extends React.Component {\n  render() {\n    function renderEventContent(eventInfo) {\n      const { event } = eventInfo;\n      const { type } = event.extendedProps;\n      const {borderColor} = event;\n      console.log(event);\n      console.log(type);\n      return (\n        <div className={`bg-${type} text-${type}-text`} style={{borderColor:borderColor}}>\n          <b >{eventInfo.event.title}</b>\n        </div>\n      );\n    }\n    return (\n      <FullCalendar\n        plugins={[dayGridPlugin, bootstrapPlugin, timeGridPlugin, listPlugin]}\n\n        initialView=\"dayGridMonth\"\n        headerToolbar={{\n          start: \"prev,next title\",\n          center:'',\n          end: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n        }}\n        eventContent={renderEventContent}\n        events={[\n          {\n            title: \"Dinner\",\n            date: \"2021-11-17\",\n            extendedProps: {\n              type: \"food\",\n            },\n          },\n          {\n            title: \"Meditation\",\n            date: \"2021-11-17\",\n            extendedProps: {\n              type: \"health\",\n            },\n          },\n          {\n            title: \"Doctor's Appointment\",\n            date: \"2021-11-19\",\n            extendedProps: {\n              type: \"health\",\n            },\n            borderColor:'rose',\n          },\n        ]}\n      />\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calendar from './Calendar';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calendar />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}