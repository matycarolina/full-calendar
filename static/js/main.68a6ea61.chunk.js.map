{"version":3,"sources":["Calendar.js","reportWebVitals.js","@fake-db/mock.js","@fake-db/api/users.js","@fake-db/db/users.js","@fake-db/index.js","index.js"],"names":["Calendar","useState","data","setData","useEffect","axios","get","then","response","schedulerLicenseKey","plugins","dayGridPlugin","bootstrapPlugin","timeGridPlugin","listPlugin","resourceTimeGridPlugin","resourceTimelinePlugin","initialView","resources","id","title","headerToolbar","start","end","eventContent","eventInfo","event","extendedProps","type","doctor","surgery","patient","status","resourceId","borderColor","console","log","className","style","width","getHours","getMinutes","src","url","alt","events","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","mock","MockAdapter","onGet","reply","resourceIds","onAny","passThrough","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68a6ea61.chunk.js","sourcesContent":["import React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./scss/custom.scss\";\n\nfunction Calendar() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get(\"/api/users/list/all-data\").then(function (response) {\n      setData(response.data);\n    });\n  }, []);\n  function renderEventContent(eventInfo) {\n    const { event } = eventInfo;\n    const { type, doctor, surgery, patient, status, resourceId } =\n      event.extendedProps;\n    const { borderColor } = event;\n    const { start, end } = event;\n    console.log(event);\n    console.log(resourceId);\n    return (\n      <div\n        className={`bg-${type} text-${type}-text`}\n        style={{ borderColor: borderColor, width: \"100%\" }}\n      >\n        <p>{`${start?.getHours()}:${start?.getMinutes()} - ${end?.getHours()}:${end?.getMinutes()}`}</p>\n        <b>{patient}</b>\n        <p>{doctor}</p>\n        <p>{surgery}</p>\n\n        {status === \"Pendiente\" && (\n          <div className={`text-${status}-text`}>\n            <img\n              src={eventInfo.event.url}\n              style={{ width: \"30px\" }}\n              alt={eventInfo.event.title}\n            />\n            <span>{status}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n  return (\n    <FullCalendar\n      schedulerLicenseKey=\"CC-Attribution-NonCommercial-NoDerivatives\"\n      plugins={[\n        dayGridPlugin,\n        bootstrapPlugin,\n        timeGridPlugin,\n        listPlugin,\n        resourceTimeGridPlugin,\n        resourceTimelinePlugin,\n      ]}\n      initialView=\"resourceTimeGridDay\"\n      resources={[\n        { id: \"1\", title: \"Quirofano 1\" },\n        { id: \"2\", title: \"Quirofano 2\" },\n        { id: \"3\", title: \"Quirofano 3\" },\n      ]}\n      headerToolbar={{\n        start: \"prev,next title\",\n\n        end: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n      }}\n      eventContent={renderEventContent}\n      events={data}\n      \n    />\n  );\n}\nexport default Calendar;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import MockAdapter from 'axios-mock-adapter'\nimport axios from 'axios'\n\nconst mock = new MockAdapter(axios)\n\nexport default mock\n","import mock from '../mock';\nimport { data } from '../db/users';\n\nmock.onGet('/api/users/list/all-data').reply(200, data.users);\n","export const data = {\n  users: [\n    {\n      id: \"1\",\n      extendedProps: {\n        type: \"appointments\",\n        patient: \"Raul Salinas\",\n        doctor: \"Dr. Vicente Garcia\",\n        surgery: \"Apendicectomia\",\n        status: \"Pendiente\",\n      },\n      start: \"2021-12-06T11:00:00\",\n      end: \"2021-12-06T12:30:00\",\n      url: \"https://res.cloudinary.com/dekqenh3y/image/upload/v1638303770/llamada-telefonica_v5ba31.png\",\n      resourceIds: [\"1\", \"2\", \"3\"],\n    },\n    {\n      id: \"2\",\n      title: \"Meditation\",\n      extendedProps: {\n        type: \"appointments\",\n        patient: \"Carolina Murillo\",\n        doctor: \"Dr. Xavier Serrano\",\n        surgery: \"Colecistectomia\",\n        status: \"Pendiente\",\n      },\n      start: \"2021-12-10T10:00:00\",\n      end: \"2021-12-10T11:00:00\",\n      url: \"https://res.cloudinary.com/dekqenh3y/image/upload/v1638303770/llamada-telefonica_v5ba31.png\",\n    },\n    {\n      id:\"3\",\n      title: \"Doctor's Appointment\",\n      extendedProps: {\n        type: \"appointments\",\n        patient: \"Santiago Rojas\",\n        doctor: \"Dr. Alberto Perez\",\n        surgery: \"Sutura fractura expuesta\",\n        status: \"Pendiente\",\n      },\n      start: \"2021-12-12T06:00:00\",\n      end: \"2021-12-12T08:00:00\",\n      url: \"https://res.cloudinary.com/dekqenh3y/image/upload/v1638303770/llamada-telefonica_v5ba31.png\",\n      resourceIds: [\"1\", \"2\", \"3\"],\n    },\n    {\n      id:\"4\",\n      title: \"Doctor's Appointment\",\n      extendedProps: {\n        type: \"appointments\",\n        patient: \"Santiago Rojas\",\n        doctor: \"Dr. Alberto Perez\",\n        surgery: \"Sutura fractura expuesta\",\n        status: \"Completo\",\n      },\n      start: \"2021-12-12T08:00:00\",\n      end: \"2021-12-12T10:00:00\",\n      url: \"https://res.cloudinary.com/dekqenh3y/image/upload/v1638303770/llamada-telefonica_v5ba31.png\",\n      resourceIds: [\"1\", \"2\", \"3\"],\n    },\n  ]\n}","import mock from './mock'\nimport './api/users'\n\nmock.onAny().passThrough()\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calendar from './Calendar';\nimport reportWebVitals from './reportWebVitals';\nimport'./@fake-db';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calendar />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}